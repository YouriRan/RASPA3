name: create-binary-packages-aarch64
on:
  workflow_dispatch:
    branches: [ "main" ]
    inputs:
      tag-name:
        description: 'Name of the tag that will be used for this release'
        required: true
      version:
        description: 'Code version passed to cmake.'
        required: true

jobs:
  release-job:
    permissions: write-all
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.step_upload_url.outputs.upload_url }}
    steps:
    - name: checkout-code
      uses: actions/checkout@v4
    - name: conventional-changelog-action
      uses: TriPSs/conventional-changelog-action@v5
      id: changelog
      with:
        create-summary: 'true'
        skip-bump: 'true'
        skip-commit: 'true'
        skip-tag: 'false'
        output-file: 'false'
        github-token: ${{ secrets.github_token }}
    - name: create-release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.tag-name }}
        release_name: Release ${{ github.event.inputs.tag-name }}
        body: ${{ steps.changelog.outputs.clean_changelog }}
        draft: false
        prerelease: false
    - name: set-upload_url-output
      id: step_upload_url
      run: echo "upload_url=${{ steps.create_release.outputs.upload_url }}" >> "$GITHUB_OUTPUT"


  linux-aarch64-ubuntu-24-job:
    runs-on: ubuntu-24.04-arm
    needs: release-job
    steps:
      - name: checkout-repository
        uses: actions/checkout@v4
      - name: configure-cmake-raspa
        shell: bash
        run: |
          DEBIAN_FRONTEND=noninteractive TZ=Europe/Amsterdam apt-get -y install tzdata
          apt-get install -y --no-install-recommends git ca-certificates ninja-build wget openssl libssl-dev make
          apt-get install -y --no-install-recommends llvm lld clang clang-tools clang-tidy libc++-dev libc++abi-dev libomp-dev libclang-rt-dev
          apt-get install -y --no-install-recommends python3 pybind11-dev python3-pybind11 python3-dev
          apt-get install -y --no-install-recommends liblapack64-dev libblas64-dev
          apt-get install -y --no-install-recommends ocl-icd-opencl-dev libfftw3-dev
          wget https://github.com/Kitware/CMake/releases/download/v3.31.6/cmake-3.31.6.tar.gz
          tar -zxf cmake-3.31.6.tar.gz
          cd cmake-3.31.6
          ./bootstrap
          nice -n20 make -j 8
          make install
          cd ..
          /bin/rm -rf cmake-3.31.6
          /bin/rm cmake-3.31.6.tar.gz
          wget https://github.com/HDFGroup/hdf5/releases/download/hdf5_1.14.4.3/hdf5.tar.gz
          tar -zxf hdf5.tar.gz
          cd hdf5-1.14.4-3
          cmake -B build -GNinja -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DCMAKE_INSTALL_PREFIX=/usr -DHDF5_BUILD_CPP_LIB=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -std=c++23 -stdlib=libc++" -DZLIB_LIBRARY=/usr/lib/x86_64-linux-gnu/libz.a -DHDF5_ENABLE_NONSTANDARD_FEATURE_FLOAT16=OFF
          ninja -C build
          ninja -C build install
          cd ..
          rm -rf hdf5-1.14.4-3
          ldconfig
          cmake -B ${{github.workspace}}/build --preset linux-aarch64-ubuntu-24
      - name: create-raspa-deb-package
        shell: bash
        run: |
          ninja -C ${{github.workspace}}/build package
          mv ${{github.workspace}}/build/raspa_${{ github.event.inputs.version }}_aarch64-ubuntu-24.deb .
      - name: upload-release-asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-job.outputs.upload_url }}
          asset_path: ./raspa_${{ github.event.inputs.version }}_aarch64.deb
          asset_name: raspa_${{ github.event.inputs.version }}_aarch64_ubuntu-24.deb
          asset_content_type: application/octet-stream
 
